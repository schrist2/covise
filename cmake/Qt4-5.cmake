macro(find_qt)
   if (${ARGC} EQUAL 0)
     set(required "REQUIRED")
   endif()
   if(COVISE_USE_QT4)
      covise_find_package(Qt4 COMPONENTS QtCore QtGui QtXml QtNetwork ${required})
      covise_find_package(Qt4 COMPONENTS QtWebkit QtScript QtScriptTools QtUiTools QtOpenGL)
   else()
      set(SAVED_CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH})
      if (APPLE)
         set(CMAKE_PREFIX_PATH /usr/local/opt/qt5 ${CMAKE_PREFIX_PATH})
      endif()
      set(CMAKE_PREFIX_PATH $ENV{EXTERNLIBS}/qt5 ${CMAKE_PREFIX_PATH})
      find_package(Qt5Core ${required})
      find_package(Qt5Network ${required})
      find_package(Qt5Xml ${required})
      find_package(Qt5Widgets ${required})
      find_package(Qt5OpenGL ${required})
      find_package(Qt5Gui ${required})
      find_package(Qt5Svg ${required})
      find_package(Qt5PrintSupport ${required})
      find_package(Qt5UiTools ${required})
      find_package(Qt5Script ${required})
      find_package(Qt5ScriptTools ${required})
      find_package(Qt5WebEngine QUIET)
      find_package(Qt5WebEngineWidgets QUIET)
      if (Qt5WebEngine_FOUND AND Qt5WebEngineWidgets_FOUND AND FALSE)
        set(COVISE_USE_WEBENGINE TRUE)
      else()
        find_package(Qt5WebKit)
        find_package(Qt5WebKitWidgets)
        if (Qt5WebKit_FOUND AND Qt5WebKitWidgets_FOUND)
          set(COVISE_USE_WEBKIT TRUE)
        endif()
      endif()
      set(CMAKE_PREFIX_PATH ${SAVED_CMAKE_PREFIX_PATH})
   endif()
endmacro(find_qt)

macro(qt_wrap_cpp)
   if(COVISE_USE_QT4)
      qt4_wrap_cpp(${ARGV})
   else()
      qt5_wrap_cpp(${ARGV})
   endif()
endmacro(qt_wrap_cpp)

macro(qt_wrap_ui)
   IF(COVISE_USE_QT4)
      qt4_wrap_ui(${ARGV})
   ELSE()
      qt5_wrap_ui(${ARGV})
   ENDIF()
endmacro(qt_wrap_ui)

macro(qt_add_resources)
   if(COVISE_USE_QT4)
      qt4_add_resources(${ARGV})
   else()
      qt5_add_resources(${ARGV})
   endif()
endmacro(qt_add_resources)

macro(qt_use_modules target)
   if(COVISE_USE_QT4)
      if (NOT QT_USE_FILE)
         message("qt_use_modules: find_qt() not run or Qt not found?")
      endif()
      foreach(mod ${ARGN})
         if(mod STREQUAL "Qt3Support")
            set(QT_USE_QT3SUPPORT 1)
         endif()
         if(mod STREQUAL "Xml")
            set(QT_USE_QTXML 1)
         endif()
         if(mod STREQUAL "Gui")
            set(QT_USE_QTGUI 1)
         endif()
         if(mod STREQUAL "Widgets")
            set(QT_USE_QTGUI 1)
         endif()
         if(mod STREQUAL "WebKit")
            set(QT_USE_QTWEBKIT 1)
         endif()
         if(mod STREQUAL "Core")
            set(QT_USE_QTCORE 1)
         endif()
         if(mod STREQUAL "Network")
            set(QT_USE_QTNETWORK 1)
         endif()
         if(mod STREQUAL "OpenGL")
            set(QT_USE_QTOPENGL 1)
         endif()
         if(mod STREQUAL "Svg")
            set(QT_USE_QTSVG 1)
         endif()
         if(mod STREQUAL "UiTools")
            set(QT_USE_QTUITOOLS 1)
         endif()
         if(mod STREQUAL "Script")
            set(QT_USE_QTSCRIPT 1)
         endif()
         if(mod STREQUAL "ScriptTools")
            set(QT_USE_QTSCRIPTTOOLS 1)
         endif()
      endforeach()
      include(${QT_USE_FILE})
      target_link_libraries(${target} ${QT_LIBRARIES})
   else()
      foreach(mod ${ARGN})
         if(mod STREQUAL "Qt3Support")
            message("Qt 5 does not include Qt3Support")
            return()
         endif()
      endforeach()
      qt5_use_modules(${target} ${ARGN})
   endif()
endmacro(qt_use_modules)
